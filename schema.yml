openapi: 3.0.3
info:
  title: Event Manager API
  version: 1.0.0
  description: API for managing events and users
paths:
  /api/v1/event_categories/:
    get:
      operationId: v1_event_categories_list
      parameters:
      - in: query
        name: name
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCategoryList'
          description: ''
    post:
      operationId: v1_event_categories_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
  /api/v1/event_categories/{id}/:
    get:
      operationId: v1_event_categories_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    put:
      operationId: v1_event_categories_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Category'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Category'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Category'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    patch:
      operationId: v1_event_categories_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCategory'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
          description: ''
    delete:
      operationId: v1_event_categories_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this category.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/events/:
    get:
      operationId: v1_events_list
      parameters:
      - in: query
        name: category
        schema:
          type: integer
      - in: query
        name: category__name
        schema:
          type: string
      - in: query
        name: end_date
        schema:
          type: string
          format: date-time
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: start_date
        schema:
          type: string
          format: date-time
      - in: query
        name: title
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEventList'
          description: ''
    post:
      operationId: v1_events_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/{id}/:
    get:
      operationId: v1_events_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    put:
      operationId: v1_events_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Event'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Event'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Event'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    patch:
      operationId: v1_events_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEvent'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
    delete:
      operationId: v1_events_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/events/{id}/detailed/:
    get:
      operationId: v1_events_detailed_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this event.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/events/calendar/:
    get:
      operationId: v1_events_calendar_retrieve
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventList'
          description: ''
  /api/v1/events/detailed/:
    get:
      operationId: v1_events_detailed_retrieve
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: ''
  /api/v1/notification_logs/:
    get:
      operationId: v1_notification_logs_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationLogList'
          description: ''
  /api/v1/notification_logs/{id}/:
    get:
      operationId: v1_notification_logs_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification log.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLog'
          description: ''
  /api/v1/notification_logs/{id}/detailed/:
    get:
      operationId: v1_notification_logs_detailed_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification log.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLogDetailed'
          description: ''
  /api/v1/notification_logs/detailed/:
    get:
      operationId: v1_notification_logs_detailed_retrieve
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationLog'
          description: ''
  /api/v1/notifications/:
    get:
      operationId: v1_notifications_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNotificationList'
          description: ''
  /api/v1/notifications/{id}/:
    get:
      operationId: v1_notifications_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this notification.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Notification'
          description: ''
  /api/v1/users/:
    get:
      operationId: v1_users_list
      parameters:
      - in: query
        name: date_joined_after
        schema:
          type: string
          format: date
      - in: query
        name: date_joined_before
        schema:
          type: string
          format: date
      - in: query
        name: email
        schema:
          type: string
      - in: query
        name: first_name
        schema:
          type: string
      - in: query
        name: last_name
        schema:
          type: string
      - in: query
        name: modified_date_after
        schema:
          type: string
          format: date
      - in: query
        name: modified_date_before
        schema:
          type: string
          format: date
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: phone
        schema:
          type: string
      - name: sort
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: v1_users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailed'
          description: ''
    put:
      operationId: v1_users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserDetailed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserDetailed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserDetailed'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailed'
          description: ''
    patch:
      operationId: v1_users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailed'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailed'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUserDetailed'
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailed'
          description: ''
  /api/v1/users/{id}/detailed/:
    get:
      operationId: v1_users_detailed_retrieve_2
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailed'
          description: ''
  /api/v1/users/detailed/:
    get:
      operationId: v1_users_detailed_retrieve
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailed'
          description: ''
  /api/v1/users/login/:
    post:
      operationId: v1_users_login_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserLogin'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLogin'
          description: ''
  /api/v1/users/profile/:
    get:
      operationId: v1_users_profile_retrieve
      tags:
      - v1
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserDetailed'
          description: ''
  /api/v1/users/register/:
    post:
      operationId: v1_users_register_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRegistration'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRegistration'
        required: true
      security:
      - tokenAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRegistration'
          description: ''
components:
  schemas:
    Category:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
        created_date:
          type: string
          format: date-time
          readOnly: true
        modified_date:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 200
      required:
      - created_date
      - id
      - modified_date
      - name
    DaysOfWeekEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      type: integer
      description: |-
        * `0` - Monday
        * `1` - Tuesday
        * `2` - Wednesday
        * `3` - Thursday
        * `4` - Friday
        * `5` - Saturday
        * `6` - Sunday
    Event:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        category:
          type: integer
        recurrence:
          allOf:
          - $ref: '#/components/schemas/Recurrence'
          writeOnly: true
        created_date:
          type: string
          format: date-time
          readOnly: true
        modified_date:
          type: string
          format: date-time
          readOnly: true
        is_recurrence:
          type: boolean
        is_notifications_active:
          type: boolean
        title:
          type: string
          maxLength: 200
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
      required:
      - created_date
      - end_date
      - id
      - modified_date
      - start_date
      - title
      - user
    EventList:
      type: object
      properties:
        event:
          $ref: '#/components/schemas/Event'
        dates:
          type: array
          items:
            type: string
            format: date-time
      required:
      - dates
      - event
    FrequencyEnum:
      enum:
      - 0
      - 1
      - 2
      - 3
      type: integer
      description: |-
        * `0` - Yearly
        * `1` - Monthly
        * `2` - Weekly
        * `3` - Daily
    MonthsEnum:
      enum:
      - 1
      - 2
      - 3
      - 4
      - 5
      - 6
      - 7
      - 8
      - 9
      - 10
      - 11
      - 12
      type: integer
      description: |-
        * `1` - January
        * `2` - February
        * `3` - March
        * `4` - April
        * `5` - May
        * `6` - June
        * `7` - July
        * `8` - August
        * `9` - September
        * `10` - October
        * `11` - November
        * `12` - December
    Notification:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        trigger_date:
          type: string
          format: date-time
        object_id:
          type: integer
          maximum: 2147483647
          minimum: 0
        is_active:
          type: boolean
        is_broadcast:
          type: boolean
        content_type:
          type: integer
        user:
          type: integer
          nullable: true
      required:
      - content_type
      - id
      - object_id
      - trigger_date
    NotificationLog:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_date:
          type: string
          format: date-time
          readOnly: true
        notification:
          type: integer
      required:
      - created_date
      - id
      - notification
      - notification_type
      - status
    NotificationLogDetailed:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        message:
          type: string
        notification_type:
          $ref: '#/components/schemas/NotificationTypeEnum'
        status:
          $ref: '#/components/schemas/StatusEnum'
        created_date:
          type: string
          format: date-time
          readOnly: true
        notification:
          type: integer
      required:
      - created_date
      - id
      - message
      - notification
      - notification_type
      - status
    NotificationSettings:
      type: object
      properties:
        is_active:
          type: boolean
          default: true
        email_allowed:
          type: boolean
          default: true
        sms_allowed:
          type: boolean
          default: true
        push_allowed:
          type: boolean
          default: true
    NotificationTypeEnum:
      enum:
      - email
      - sms
      - push
      type: string
      description: |-
        * `email` - Email
        * `sms` - SMS
        * `push` - Push
    PaginatedCategoryList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Category'
    PaginatedEventList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Event'
    PaginatedNotificationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Notification'
    PaginatedNotificationLogList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/NotificationLog'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedCategory:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        description:
          type: string
        created_date:
          type: string
          format: date-time
          readOnly: true
        modified_date:
          type: string
          format: date-time
          readOnly: true
        name:
          type: string
          maxLength: 200
    PatchedEvent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        user:
          type: integer
          readOnly: true
        category:
          type: integer
        recurrence:
          allOf:
          - $ref: '#/components/schemas/Recurrence'
          writeOnly: true
        created_date:
          type: string
          format: date-time
          readOnly: true
        modified_date:
          type: string
          format: date-time
          readOnly: true
        is_recurrence:
          type: boolean
        is_notifications_active:
          type: boolean
        title:
          type: string
          maxLength: 200
        start_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
        description:
          type: string
          nullable: true
    PatchedUserDetailed:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        settings:
          $ref: '#/components/schemas/Settings'
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
          readOnly: true
        phone:
          type: string
          nullable: true
          maxLength: 15
        modified_date:
          type: string
          format: date-time
          readOnly: true
    Recurrence:
      type: object
      properties:
        start_datetime:
          type: string
          format: date-time
        recurrence_rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        end_datetime:
          type: string
          format: date-time
        exclusion_rules:
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        include_start_datetime:
          type: boolean
        recurrence_dates:
          type: array
          items:
            type: string
            format: date-time
        exclusion_dates:
          type: array
          items:
            type: string
            format: date-time
      required:
      - recurrence_rules
      - start_datetime
    Rule:
      type: object
      properties:
        frequency:
          $ref: '#/components/schemas/FrequencyEnum'
        interval:
          type: integer
          minimum: 1
        days_of_week:
          type: array
          items:
            $ref: '#/components/schemas/DaysOfWeekEnum'
        days_of_month:
          type: array
          items:
            type: integer
            maximum: 31
            minimum: 1
        months:
          type: array
          items:
            $ref: '#/components/schemas/MonthsEnum'
        position_in_set:
          type: array
          items:
            type: integer
            maximum: 366
            minimum: 1
        occurrence_count:
          type: integer
        until_date:
          type: string
          format: date-time
      required:
      - frequency
    Settings:
      type: object
      properties:
        notification_settings:
          $ref: '#/components/schemas/NotificationSettings'
      required:
      - notification_settings
    StatusEnum:
      enum:
      - sent
      - failed
      type: string
      description: |-
        * `sent` - Sent
        * `failed` - Failed
    User:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        phone:
          type: string
          nullable: true
          maxLength: 15
        modified_date:
          type: string
          format: date-time
          readOnly: true
          nullable: true
      required:
      - email
      - modified_date
      - pk
    UserDetailed:
      type: object
      properties:
        pk:
          type: integer
          readOnly: true
          title: ID
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        settings:
          $ref: '#/components/schemas/Settings'
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        is_active:
          type: boolean
          title: Active
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
          readOnly: true
        phone:
          type: string
          nullable: true
          maxLength: 15
        modified_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - date_joined
      - email
      - modified_date
      - pk
      - settings
    UserLogin:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    UserRegistration:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
        phone:
          type: string
      required:
      - email
      - password
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
